// //задача на указать какой console.log выведется макро микро таски и тд
// от две задачи, где нужно ответить, что будет выведено в консоль:

// Легкая задача:
// javascript
// Копировать код
console.log('1');

setTimeout(() => {
  console.log('2');
}, 0);

console.log('3');

// Вопрос: Какой будет порядок вывода сообщений в консоль и почему?

// Сложная задача:
// javascript
// Копировать код
console.log('A');

setTimeout(() => {
  console.log('B');
}, 0);

Promise.resolve().then(() => {
  console.log('C');
});

console.log('D');
// Вопрос: Какой будет порядок вывода сообщений в консоль и почему?





// Вот более сложная задача с большим количеством операций, которая потребует внимания к порядку выполнения:

// Задача:
// javascript
// Копировать код
// console.log('1');

setTimeout(() => {
  console.log('2');
}, 0);

Promise.resolve().then(() => {
  console.log('3');
});

setTimeout(() => {
  console.log('4');
}, 0);

Promise.resolve().then(() => {
  console.log('5');
});

console.log('6');

setTimeout(() => {
  console.log('7');
}, 0);

console.log('8');

// Вопрос: Какой будет порядок вывода сообщений в консоль и почему?

// В этой задаче важно учитывать:

// Синхронные операции (например, console.log('1'), console.log('6')).
// Операции с setTimeout (они попадают в очередь событий, которая обрабатывается после выполнения стека вызовов).
// Промисы (Promise.resolve().then()), которые попадают в очередь микротасков и выполняются перед задачами в очереди событий.
// Ответ на эту задачу зависит от того, как event loop обрабатывает синхронные операции, задачи из очереди событий и микротаски.